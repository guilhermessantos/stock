{"version":3,"file":"static/webpack/static/development/pages/index.js.e2bf6015e18cfde69627.hot-update.js","sources":["webpack:///./src/pages/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport Head from 'next/head'\nimport { FaGithub, FaSyncAlt } from 'react-icons/fa'\nimport GlobalStyle from '../styles/global'\nimport { Contribute } from '../components/contribute'\nimport { SearchCompany } from '../components/search-company'\nimport { TableParticipation } from '../components/table-participation'\nimport { Button } from '../components/button'\n\nconst Home = () => {\n  const refInputSymbol = useRef(0)\n  const [value, setValue] = useState('R$ 0')\n  const [companyValue, setCompanyValue] = useState([])\n  const [contributeTotal, setContributeTotal] = useState(0)\n  const [load, setLoad] = useState(true)\n  const [loadUpdate, setLoadUpdate] = useState({load: false, symbol: ''})\n  const [openOptionsRemove, setOptionsRemove] = useState(false)\n\n  useEffect(() => {\n    const storageCompanies = localStorage.getItem('companies')\n    const storageValue = localStorage.getItem('value')\n\n    storageCompanies && setCompanyValue(JSON.parse(storageCompanies))\n    storageValue && setValue(`R$ ${storageValue}`)\n    setLoad(false)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('companies', JSON.stringify(companyValue))\n    refInputSymbol.current.focus()\n  }, [companyValue, loadUpdate])\n\n  useEffect(() => {\n    localStorage.setItem('value', value.replace(/R\\$/, ''))\n  }, [value])\n\n  const handleCompany = company => {\n    setCompanyValue([...companyValue, company])\n  }\n\n  const handleValue = contribute => {\n    setValue(contribute)\n  }\n\n  const handleContributeTotal = value => {\n    setContributeTotal(value)\n  }\n\n  const handleRemoveCompany = symbol => {\n    setCompanyValue(companyValue.filter(item => item.symbol !== symbol))\n  }\n\n  const handleUpdateCompany = async symbol => {\n    setLoadUpdate({\n      load: true,\n      symbol\n    })\n    const response = await fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}.sa&apikey=B0RKSSJH2TS1VNXF`)\n    const data = await response.json()\n    const convertPrice = (Math.round(data['Global Quote']['05. price'] * 100) / 100).toFixed(2)\n\n    for (let i in companyValue) {\n      if (companyValue[i].symbol == symbol) {\n        companyValue[i].price = parseFloat(convertPrice)\n      }\n    }\n\n    setCompanyValue(companyValue)\n    setLoadUpdate({\n      load: false,\n      symbol\n    })\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Stock | Github</title>\n      </Head>\n      <Contribute handleValue={handleValue} contribute={value} contributeTotal={contributeTotal} />\n      <SearchCompany refProp={refInputSymbol} handleCompany={handleCompany} />\n      <TableParticipation\n        companies={companyValue}\n        contribute={value.replace(/R\\$/, '')}\n        handleContributeTotal={handleContributeTotal}\n        handleRemoveCompany={handleRemoveCompany}\n        handleUpdateCompany={handleUpdateCompany}\n        loadUpdate={loadUpdate}\n      />\n      <a className=\"link_github\" href=\"https://github.com/guilhermessantos/stock\">\n        <FaGithub size=\"18\" />\n      </a>\n      {!!companyValue.length && (\n        <div className='footer'>\n          <div className={openOptionsRemove && 'show-options-remove'}>\n            <span onClick={() => {\n              setCompanyValue([])\n              setOptionsRemove(false)\n            }}>Sim</span>\n            <span onClick={() => setOptionsRemove(false)}>NÃ£o</span>\n          </div>\n\n          <Button size='small' secondary onClick={() => setOptionsRemove(!openOptionsRemove)}>Remover todos ativos</Button>\n        </div>\n      )}\n      <GlobalStyle />\n      {load && <div className=\"load\"><FaSyncAlt size=\"30\" /></div>}\n    </>\n  )\n}\n\nexport default Home\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AAAA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}