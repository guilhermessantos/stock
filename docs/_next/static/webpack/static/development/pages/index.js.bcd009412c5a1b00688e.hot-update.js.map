{"version":3,"file":"static/webpack/static/development/pages/index.js.bcd009412c5a1b00688e.hot-update.js","sources":["webpack:///./src/components/search-company/index.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport NumberFormat from 'react-number-format'\nimport { Field } from '../field'\nimport { Button } from '../button'\nimport { FieldGroup } from '../field-group'\nimport { Container, Message } from './styles'\nimport { FaSyncAlt, FaCheckCircle, FaExclamationCircle } from 'react-icons/fa'\n\nconst SearchCompany = ({ handleCompany }) => {\n  const refInputSymbol = useRef(0)\n  const [valueCompany, setValueCompany] = useState('')\n  const [load, setLoad] = useState(false)\n  const [company, setCompany] = useState(false)\n  const [messageInfo, setMessageInfo] = useState(false)\n  const [valueParticipation, setValueParticipation] = useState('')\n  const [newCompany, setNewCompany] = useState({\n    symbol: '',\n    price: 0,\n    participation: 0\n  })\n\n  const getAction = async company => {\n    setLoad(true)\n    const response = await fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${company}.sa&apikey=B0RKSSJH2TS1VNXF`)\n    const data = await response.json()\n    setLoad(false)\n\n    if (data['Error Message'] || data['Note']) {\n      setMessageInfo(true)\n      return\n    }\n\n    const convertPrice = (Math.round(data['Global Quote']['05. price'] * 100) / 100).toFixed(2)\n\n    setNewCompany({\n      ...newCompany,\n      symbol: valueCompany,\n      price: parseFloat(convertPrice)\n    })\n\n    setCompany(true)\n  }\n\n  const save = () => {\n    const participation = valueParticipation.replace(/\\s*\\%+/g, '')\n\n    handleCompany({\n      ...newCompany,\n      participation: parseInt(participation)\n    })\n\n    setCompany(false)\n    setValueCompany('')\n    setValueParticipation('')\n  }\n\n  return (\n    <Container hasCompany={company}>\n      <FieldGroup>\n        <Field\n          label=\"Empresa\"\n          placeholder=\"ITSA4\"\n          id=\"company\"\n          onChange={e => setValueCompany(e.target.value)}\n          disabled={load || company || messageInfo}\n          error={messageInfo}\n          value={valueCompany}\n          refProp={refInputSymbol}\n        />\n\n        {company || messageInfo ?\n          <Button\n            disabled={load}\n            error={messageInfo}\n            onClick={() => {\n              setCompany(false)\n              setMessageInfo(false)\n              setValueCompany('')\n            }}\n          >\n            {!load ? 'Editar' : <FaSyncAlt />}\n          </Button>\n         : <Button disabled={load} onClick={() => valueCompany.length && getAction(valueCompany)}>{!load ? 'Buscar' : <FaSyncAlt />}</Button>\n        }\n        <FaCheckCircle />\n        {messageInfo && <Message><FaExclamationCircle />Não foi possivel encontrar o ativo: <strong>{valueCompany}</strong></Message>}\n      </FieldGroup>\n\n      <Field\n        label=\"Participação\"\n        id=\"participation\"\n      >\n        <NumberFormat\n          id=\"participation\"\n          placeholder=\"10%\"\n          onValueChange={e => setValueParticipation(e.formattedValue)}\n          format=\"##%\"\n          value={company ? valueParticipation : ''}\n          disabled={!company}\n          type=\"tel\"\n        />\n      </Field>\n\n      <Button\n        disabled={!valueParticipation.length}\n        onClick={() => (valueCompany.length && valueParticipation.length && !messageInfo) && save()}\n      >Cadastrar</Button>\n    </Container>\n  )\n}\n\nexport { SearchCompany }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AACA;AAHA;AAPA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAMA;AAPA;AACA;AADA;AAWA;AAEA;AAEA;AACA;AAHA;AAMA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AACA;AAEA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;;;A","sourceRoot":""}